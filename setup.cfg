[metadata]
name = autoprognosis
description = A system for automating the design of predictive modeling pipelines tailored for clinical prognosis.
author = vanderschaarlab
author_email =
license =  Apache-2.0 license
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
url = https://www.vanderschaar-lab.com/

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

classifiers =
    Programming Language :: Python :: 3
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Intended Audience :: Healthcare Industry
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src
# Require a min/specific Python version (comma-separated conditions)
# python_requires = >=3.8

depends =
    torch>=1.10
    numpy>=1.20
    pandas>=1.3,<2.0
    scikit-learn>=1.0
    scipy>=1.3.2
    shap>=0.40.0
    optuna==3.1.0
    hyperimpute>=0.1.16
    statsmodels
    pyod
    pydantic
    seaborn
    matplotlib
    cloudpickle
    lifelines
    loguru
    redis
    joblib

install_requires =
    importlib-metadata; python_version<"3.8"
    %(depends)s


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install autoprognosis[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    bandit
    black
    black-nb
    darglint
    doc8
    flake8
    isort
    nbconvert
    nbformat
    pytest
    pytest-benchmark
    pytest-cov
    pytest-xdist[psutil]
    pytest-xprocess
    py # pytest 7.2.0 bug https://github.com/pytest-dev/pytest-xprocess/issues/110
    pre-commit
    tabulate
    click
    optuna
    pycox

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this py.test issue.
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 120
extend_ignore = E203, E231, E712, E501, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
